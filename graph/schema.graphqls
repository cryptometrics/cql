# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type Todo {
  id: ID!
  text: String!
  done: Boolean!
  user: User!
}

type User {
  id: ID!
  name: String!
}

type CoinbaseCurrencyDetails {
  type: String
  symbol: String
  networkConfirmations: Int
  sortOrder: Int
  cryptoAddressLink: String
  cryptoTransactionLink: String
  pushPaymentMethods: [String]
  groupTypes: [String]
}

type CoinbaseCurrency {
  id: String!
  name: String!
  minSize: Float
  status: String
  message: String
  maxPrecision: Float
  convertibleTo: [String]
  details: CoinbaseCurrencyDetails
  displayName: String
  processingTimeSeconds: Int
  minWithdrawalAmount: Int
  maxWithdrawalAmount: Int
}

type CoinbaseBuyPrice {
  amount: Float!
  currency: String!
}

type CoinbaseProduct {
  id: String
  displayName: String
  baseCurrency: String
  quoteCurrency: String
  baseIncrement: Float
  quoteIncrement: Float
  baseMinSize: Float
  baseMaxSize: Float
  minMarketFunds: Float
  maxMarketFunds: Float
  status: String
  statusMessage: String
  cancelOnly: Boolean
  limitOnly: Boolean
  postOnly: Boolean
  tradingDisabled: Boolean
  fxStablecoin: Boolean
}

type CoinbaseProductOrderBookBidAsk {
  price: Float
  size: Float
  numOrders: Int
  orderID: String
}

type CoinbaseProductOrderBook {
  sequence: Int
  bids: [CoinbaseProductOrderBookBidAsk]
  asks: [CoinbaseProductOrderBookBidAsk]
}

type Query {
  coinbaseCurrencies(test: String): [CoinbaseCurrency]
  coinbaseCurrency(id: String!): CoinbaseCurrency
  coinbaseBuyPrice(currencyPair: String!): CoinbaseBuyPrice
  coinbaseProducts(test: String): [CoinbaseProduct]
  coinbaseProduct(id: String!): CoinbaseProduct
  coinbaseProductOrderBook(
    id: String!
    level: String!
  ): CoinbaseProductOrderBook
}

input NewTodo {
  text: String!
  userId: String!
}

type Mutation {
  createTodo(input: NewTodo!): Todo!
}
