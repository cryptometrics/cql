"""
CoinbaseOrder is the response to an order request in the coinbase API
"""
type CoinbaseOrder {
  id: String
  price: Float
  size: Float
  productID: String
  side: OrderSide
  stp: OrderSTP
  type: OrderType
  timeInForce: TimeInForce
  postOnly: Boolean
  createdAt: Time
  fillFees: Float
  filledSize: Float
  executedValue: Float
  status: String
  settled: Boolean
  funds: Float
  specifiedFunds: Float
}

input CoinbaseOrderInput {
  """
  buy or sell
  """
  side: OrderSide!

  """
  A valid product id, these are of the form {baseCurrency}-{quoteCurrency}, e.g
  BTC-USD.  The product_id must match a valid product. The products list is
  available via the /products endpoint.
  """
  productID: String!

  """
  [optional] Order ID selected by you to identify your order.  The optional
  client_oid field must be a UUID generated by your trading application. This
  field value will be broadcast in the public feed for received messages. You
  can use this field to identify your orders in the public feed.  The client_oid
  is different than the server-assigned order id. If you are consuming the
  public feed and see a received message with your client_oid, you should record
  the server-assigned order_id as it will be used for future order status
  updates. The client_oid will NOT be used after the received message is sent.
  The server-assigned order id is also returned as the id field to this HTTP
  POST request.
  """
  clientOID: String

  """
  [optional] Self-trade prevention flag.  Self-trading is not allowed on
  Coinbase Pro. Two orders from the same user will not be allowed to match with
  one another. To change the self-trade behavior, specify the stp flag.
  """
  stp: OrderSTP

  """
  Either loss or entry. Requires stop_price to be defined.
  """
  stop: OrderStop

  """
  [optional] Only if stop is defined. Sets trigger price for stop order.
  """
  stopPrice: String

  """
  The price must be specified in quote_increment product units. The quote
  increment is the smallest unit of price. For example, the BTC-USD product has
  a quote increment of 0.01 or 1 penny. Prices less than 1 penny will not be
  accepted, and no fractional penny prices will be accepted. Not required for
  market orders.
  """
  price: Float!

  """
  The size must be greater than the base_min_size for the product and no larger
  than the base_max_size. The size can be in incremented in units of
  base_increment. size indicates the amount of BTC (or base currency) to buy or
  sell.
  """
  size: Float!

  """
  [optional] GTC, GTT, IOC, or FOK (default is GTC).  Time in force policies
  provide guarantees about the lifetime of an order. There are four policies:
  good till canceled GTC, good till time GTT, immediate or cancel IOC, and fill
  or kill FOK.
  """
  timeInForce: TimeInForce

  """
  [optional]* min, hour, day
  """
  cancelAfter: OrderCancelTime

  """
  [optional]** Post only flag.  The post-only flag indicates that the order
  should only make liquidity. If any part of the order results in taking
  liquidity, the order will be rejected and no part of it will execute.
  """
  postOnly: Boolean
}

input CoinbaseOrderQueryParameters {
  """
  Limit list of orders to these statuses. Passing all returns orders of all
  statuses. Valid statuses: 'open', 'pending', 'rejected', 'done', 'active'.

  Default: 	['open', 'pending', 'active']
  """
  statuses: [String]

  """
  Only list orders for a specific product
  """
  products: [String]

  """
  Limit list of orders to after this start_date
  """
  startDate: String

  """
  Limit list of orders to before this end_date
  """
  endDate: String

  """
  Pagination parameter that requires a positive integer. If set, returns a list
  of orders before the specified integer.
  """
  before: Int

  """
  Pagination parameter that requires a positive integer. If set, returns a list
  of orders after the specified integer.
  """
  after: Int

  """
  Number of results per request. Maximum 1000. (default 1000)
  """
  limit: Int
}
